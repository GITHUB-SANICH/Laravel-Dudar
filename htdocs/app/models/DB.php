<?php
//#шаблон "одиночка"
class DB{
	private static $_db = null; 			//статическое поле, хранящее данные для подключения к БД 

	public static function getInstence(){	//метод присвоения в полю "$_db" данных о подключении к БД, если поле пустое
		if(self::$_db == null){			//условие обновления поля с данными для подключения к БД.
			$user_db = 'root'; 
			$password_db = ''; 
			$name_db = 'mvcProject';
			$host = 'localhost';
			$port = '3306';
			$dsn = 'mysql:host='.$host.'; port='.$port.'; dbname='.$name_db;
			$db = new PDO($dsn, $user_db, $password_db);

			self::$_db = $db;
		}			 
		return self::$_db;				//возврат поля с подключением к БД
	} 

	private function __construct(){}	//запрет на создание объектов на основе класса DB. Так как конструктор приватный, то к нему отсутствует доступ из вне - нельзя внести данные к класс.  
	private function __clone(){}		//магический метод, вызываемый при клонировании объектов. Так как он приватный то и клонирование недоступно. 
	private function __wakeup(){}		//магический метод, срабатывающий при восстановлении различных данных (при восстановления подключения к БД например). Приватный ММ не будет работать. 
}